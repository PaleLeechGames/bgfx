# CMake project autogenerated by GENie
cmake_minimum_required(VERSION 3.15)
cmake_policy(SET CMP0091 NEW)

project(bimg)

include(GNUInstallDirs)
set(
source_list
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_averages_and_directions.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_block_sizes.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_color_quantize.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_color_unquantize.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_compress_symbolic.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_compute_variance.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_decompress_symbolic.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_diagnostic_trace.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_diagnostic_trace.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_entry.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_find_best_partitioning.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_ideal_endpoints_and_weights.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_image.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_integer_sequence.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_internal.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_internal_entry.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_mathlib.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_mathlib.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_mathlib_softfloat.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_partition_tables.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_percentile_tables.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_pick_best_endpoint_format.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_quantization.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_symbolic_physical.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_vecmathlib.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_vecmathlib_avx2_8.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_vecmathlib_common_4.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_vecmathlib_neon_4.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_vecmathlib_none_4.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_vecmathlib_sse_4.h
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_weight_align.cpp
  ../../../../../bimg/3rdparty/astc-encoder/source/astcenc_weight_quant_xfer_tables.cpp
  ../../../../../bimg/3rdparty/tinyexr/deps/miniz/miniz.c
  ../../../../../bimg/3rdparty/tinyexr/deps/miniz/miniz.h
  ../../../../../bimg/include/bimg/bimg.h
  ../../../../../bimg/include/bimg/decode.h
  ../../../../../bimg/include/bimg/encode.h
  ../../../../../bimg/src/image.cpp
  ../../../../../bimg/src/image_gnf.cpp
)

include_directories(../../../../../bimg/include)
include_directories(../../../../../bimg/3rdparty/astc-encoder/include)
include_directories(../../../../../bimg/3rdparty/tinyexr/deps/miniz)
include_directories(../../../../../bx/include)
add_definitions(-D__STDC_LIMIT_MACROS)
add_definitions(-D__STDC_FORMAT_MACROS)
add_definitions(-D__STDC_CONSTANT_MACROS)

if(CMAKE_BUILD_TYPE MATCHES "Debug")
  add_definitions(-D_DEBUG)
  add_definitions(-DBX_CONFIG_DEBUG=1)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -MMD -MP -MP -Wall -Wextra -fomit-frame-pointer -g -m64 -std=c++17 -fno-rtti -fno-exceptions")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -MMD -MP -MP -Wall -Wextra -fomit-frame-pointer -g -m64")
endif()

if(CMAKE_BUILD_TYPE MATCHES "Release")
  add_definitions(-DNDEBUG)
  add_definitions(-DBX_CONFIG_DEBUG=0)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -MMD -MP -MP -Wall -Wextra -fomit-frame-pointer -g -O3 -m64 -std=c++17 -fno-rtti -fno-exceptions")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -MMD -MP -MP -Wall -Wextra -fomit-frame-pointer -g -O3 -m64")
endif()


if(CMAKE_BUILD_TYPE MATCHES "Debug")
  add_library(bimgDebug STATIC ${source_list})
  install(TARGETS bimgDebug RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif()

if(CMAKE_BUILD_TYPE MATCHES "Release")
  add_library(bimgRelease STATIC ${source_list})
  install(TARGETS bimgRelease RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif()

