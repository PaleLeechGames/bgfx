# CMake project autogenerated by GENie
cmake_minimum_required(VERSION 3.15)
cmake_policy(SET CMP0091 NEW)

project(bgfx)

include(GNUInstallDirs)
set(
source_list
  ../../../../include/bgfx/bgfx.h
  ../../../../include/bgfx/c99/bgfx.h
  ../../../../include/bgfx/defines.h
  ../../../../include/bgfx/embedded_shader.h
  ../../../../include/bgfx/platform.h
  ../../../../scripts/bgfx.natvis
  ../../../../src/amalgamated.cpp
  ../../../../src/bgfx.cpp
  ../../../../src/bgfx_p.h
  ../../../../src/charset.h
  ../../../../src/config.h
  ../../../../src/debug_renderdoc.cpp
  ../../../../src/debug_renderdoc.h
  ../../../../src/dxgi.cpp
  ../../../../src/dxgi.h
  ../../../../src/emscripten.h
  ../../../../src/glcontext_egl.cpp
  ../../../../src/glcontext_egl.h
  ../../../../src/glcontext_html5.cpp
  ../../../../src/glcontext_html5.h
  ../../../../src/glcontext_wgl.cpp
  ../../../../src/glcontext_wgl.h
  ../../../../src/glimports.h
  ../../../../src/nvapi.cpp
  ../../../../src/nvapi.h
  ../../../../src/renderer.h
  ../../../../src/renderer_agc.cpp
  ../../../../src/renderer_d3d.h
  ../../../../src/renderer_d3d11.cpp
  ../../../../src/renderer_d3d11.h
  ../../../../src/renderer_d3d12.cpp
  ../../../../src/renderer_d3d12.h
  ../../../../src/renderer_gl.cpp
  ../../../../src/renderer_gl.h
  ../../../../src/renderer_gnm.cpp
  ../../../../src/renderer_mtl.h
  ../../../../src/renderer_noop.cpp
  ../../../../src/renderer_nvn.cpp
  ../../../../src/renderer_vk.cpp
  ../../../../src/renderer_vk.h
  ../../../../src/shader.cpp
  ../../../../src/shader.h
  ../../../../src/shader_dxbc.cpp
  ../../../../src/shader_dxbc.h
  ../../../../src/shader_spirv.cpp
  ../../../../src/shader_spirv.h
  ../../../../src/topology.cpp
  ../../../../src/topology.h
  ../../../../src/version.h
  ../../../../src/vertexlayout.cpp
  ../../../../src/vertexlayout.h
)

include_directories(../../../../3rdparty)
include_directories(../../../../../bimg/include)
include_directories(../../../../../bx/include)
include_directories(../../../../3rdparty/khronos)
include_directories(../../../../include)
add_definitions(-D__STDC_LIMIT_MACROS)
add_definitions(-D__STDC_FORMAT_MACROS)
add_definitions(-D__STDC_CONSTANT_MACROS)

if(CMAKE_BUILD_TYPE MATCHES "Debug")
  list(REMOVE_ITEM source_list ../../../../src/amalgamated.cpp)
  add_definitions(-D_DEBUG)
  add_definitions(-DBX_CONFIG_DEBUG=1)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -MMD -MP -MP -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m64 -std=c++17 -fno-rtti -fno-exceptions")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -MMD -MP -MP -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m64")
endif()

if(CMAKE_BUILD_TYPE MATCHES "Release")
  list(REMOVE_ITEM source_list ../../../../src/amalgamated.cpp)
  add_definitions(-DNDEBUG)
  add_definitions(-DBX_CONFIG_DEBUG=0)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}  -MMD -MP -MP -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m64 -std=c++17 -fno-rtti -fno-exceptions")
  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -MMD -MP -MP -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m64")
endif()


if(CMAKE_BUILD_TYPE MATCHES "Debug")
  add_library(bgfxDebug STATIC ${source_list})
  install(TARGETS bgfxDebug RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif()

if(CMAKE_BUILD_TYPE MATCHES "Release")
  add_library(bgfxRelease STATIC ${source_list})
  install(TARGETS bgfxRelease RUNTIME DESTINATION ${CMAKE_INSTALL_LIBDIR})
endif()

